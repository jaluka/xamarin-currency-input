// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using System.Diagnostics;
using System.Globalization;
using System.ComponentModel;
using cashCore;

namespace cashinput
{
    public partial class CurrencyTextField : UITextField, INotifyPropertyChanged, ICurrencyInputFilter
    {
        public event PropertyChangedEventHandler PropertyChanged;

		public CurrencyTextField (IntPtr handle) : base (handle)
		{
		}

        private int decimalPlaces;

        private decimal amount;

        public override void AwakeFromNib()
        {
            base.AwakeFromNib();

            DecimalPlaces = 2;

            this.ShouldChangeCharacters = checkShouldChange;
            this.EditingDidBegin += CurrencyTextField_EditingDidBegin;
            this.EditingChanged += Txf_bedragEditingChanged;
            this.EditingDidEnd += Txf_bedragEditingEnd;
        }


        bool checkShouldChange(UITextField txField, NSRange y, string replacementString)
        {
            return this.MayInsertTextAt(txField.Text, replacementString, (int)y.Location, this.DecimalPlaces);
        }

        public int DecimalPlaces
        {
            get
            {
                return this.decimalPlaces;
            }

            set
            {
                this.decimalPlaces = value;
                decimal nul = 0;
                this.Placeholder = nul.ToString(this.CurrencyFormatString);;
            }
        }

        public decimal Amount
        {
            get
            {
                return amount;
            }

            set
            {
                SetInternal(value);
                this.FormatAsCurrency();
            }
        }

        private void SetInternal(decimal v)
        {
            if (amount != v)
            {
                amount = v;
                if (this.PropertyChanged != null)
                {
                    this.PropertyChanged(this, new PropertyChangedEventArgs("Amount"));
                }
            }

            Debug.WriteLine(string.Format("{0}", this.amount));
        }
            
        void CurrencyTextField_EditingDidBegin (object sender, EventArgs e)
        {
            this.FormatAsDecimal();
        }

        private void Txf_bedragEditingChanged(object sender, EventArgs e)
        {
            this.Reparse();
        }

        private void Txf_bedragEditingEnd(object sender, EventArgs e)
        {
            this.FormatAsCurrency();
        }

        private void FormatAsDecimal()
        {
            if (this.amount == 0m)
            {
                this.Text =  string.Empty;
            }
            else
            {
                this.Text =  this.Amount.ToString(this.DecimalFormatString);
            }
        }

        private void FormatAsCurrency()
        {
            if (this.amount == 0m)
            {
                this.Text =  string.Empty;
            }
            else
            {
                this.Text =  this.Amount.ToString(this.CurrencyFormatString);
            }
        }

        private string DecimalFormatString
        {
            get
            {
                return "0." + new string('#', this.DecimalPlaces);
            }
        }

        private string CurrencyFormatString
        {
            get
            {
                return string.Format("C{0}", this.DecimalPlaces);
            }
        }
    }
}
